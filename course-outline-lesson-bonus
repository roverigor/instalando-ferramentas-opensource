# üìã Course Outline - Estrutura Detalhada

**Curso:** Instala√ß√£o de Ferramentas Open Source com Portainer  
**Instrutor:** Adavio  
**Dura√ß√£o Total:** ~2 horas  
**Formato:** V√≠deos gravados + Quizzes + Projetos pr√°ticos

---

## üéØ Objetivo Geral do Curso

Capacitar empres√°rios e freelancers leigos em tecnologia a **instalar qualquer ferramenta open source** usando Docker, Portainer e OrionDesign, **economizando R$ 4.272/ano** e ganhando autonomia tecnol√≥gica.

---

## üë• Perfil do Aluno (ICP)

- **Idade:** 25-35 anos
- **Profiss√£o:** Empres√°rios, freelancers
- **N√≠vel t√©cnico:** Zero (totalmente leigo)
- **Dor principal:** Pagar caro por ferramentas cloud
- **Motiva√ß√£o:** Economizar e ter autonomia
- **Tempo dispon√≠vel:** 2 horas totais

---

## üìä Estrutura Pedag√≥gica

- ‚úÖ **Taxonomia de Bloom:** Progress√£o do lembrar ‚Üí criar
- ‚úÖ **Microlearning:** Lessons de 5-15 min
- ‚úÖ **80% Pr√°tica / 20% Teoria**
- ‚úÖ **Scaffolding progressivo:** Do simples ao complexo
- ‚úÖ **Tom motivacional:** "Fala lend√°rio!"

---

# üìö M√ìDULO 1: Fundamentos e Prepara√ß√£o

**Dura√ß√£o:** ~40 minutos  
**Objetivo:** Preparar o ambiente completo para instala√ß√µes  
**Entreg√°veis:** VPS contratada + Docker/Portainer instalados + Dom√≠nio configurado

---

## Lesson 1.1: Bem-vindo + O Que Voc√™ Vai Conquistar

**Dura√ß√£o:** 5 minutos  
**Formato:** V√≠deo gravado  
**Bloom Level:** Lembrar

### Objetivos de Aprendizado:
- [ ] Entender a economia que vai fazer (R$ 4.272/ano)
- [ ] Visualizar as 3 ferramentas que vai instalar
- [ ] Compreender a estrutura do curso
- [ ] Sentir-se motivado para come√ßar

### Conte√∫do:
1. Apresenta√ß√£o do Adavio
2. Problema: Custos de ferramentas cloud (R$ 400/m√™s)
3. Solu√ß√£o: Open source + VPS (R$ 40/m√™s)
4. Overview das 3 instala√ß√µes pr√°ticas
5. Estrutura dos 3 m√≥dulos
6. Como aproveitar melhor o curso

### Ferramentas Usadas:
- Nenhuma (aula introdut√≥ria)

### Entreg√°veis:
- Nenhum

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre o curso e economia

---

## Lesson 1.2: Entendendo VPS, Docker e Portainer

**Dura√ß√£o:** 10 minutos  
**Formato:** V√≠deo gravado  
**Bloom Level:** Compreender

### Objetivos de Aprendizado:
- [ ] Compreender o que √© uma VPS (analogia do pr√©dio)
- [ ] Entender o que √© Docker (analogia do container/navio)
- [ ] Entender o que √© Portainer (interface visual)
- [ ] Compreender o conceito de OrionDesign

### Conte√∫do:
1. **VPS (Virtual Private Server)**
   - Analogia: "√â como alugar um apartamento em um pr√©dio"
   - Diferen√ßa entre VPS e hospedagem compartilhada
   - Por que voc√™ precisa de uma VPS

2. **Docker**
   - Analogia: "Docker √© como um navio com containers"
   - Cada ferramenta fica isolada em seu container
   - Vantagens: portabilidade, isolamento, facilidade

3. **Portainer**
   - Interface visual para gerenciar Docker
   - Voc√™ n√£o vai precisar usar terminal/comandos complexos
   - Demonstra√ß√£o visual da interface

4. **OrionDesign**
   - Facilitador de instala√ß√µes
   - Templates prontos para ferramentas populares

### Ferramentas Usadas:
- Slides/Imagens explicativas

### Entreg√°veis:
- Nenhum (aula conceitual)

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre conceitos b√°sicos

---

## Lesson 1.3: Escolhendo e Contratando Sua VPS

**Dura√ß√£o:** 10 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Escolher um provedor de VPS (Hostinger ou Contabo)
- [ ] Entender os planos e custos
- [ ] Contratar a VPS corretamente
- [ ] Acessar o painel de controle da VPS

### Conte√∫do:
1. **Compara√ß√£o de Provedores**
   - Hostinger: R$ 40/m√™s, interface amig√°vel, suporte BR
   - Contabo: R$ 35/m√™s, mais recursos, suporte internacional
   - Qual escolher? (recomenda√ß√£o baseada no perfil)

2. **Especifica√ß√µes M√≠nimas**
   - 2 GB RAM (m√≠nimo)
   - 50 GB SSD
   - 1 vCPU
   - Ubuntu 22.04 LTS (sistema operacional)

3. **Passo a Passo de Contrata√ß√£o**
   - Criar conta no provedor
   - Escolher plano
   - Configurar VPS (SO, localiza√ß√£o, SSH)
   - Finalizar pagamento
   - Receber credenciais de acesso

4. **Primeiro Acesso**
   - Acessar painel de controle
   - Anotar IP da VPS
   - Anotar senha root

### Ferramentas Usadas:
- Hostinger ou Contabo (escolha do aluno)

### Entreg√°veis:
- [ ] VPS contratada e funcionando
- [ ] IP e credenciais anotados

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre escolha de VPS e configura√ß√µes

---

## Lesson 1.4: Configurando Cloudflare (Dom√≠nio + DNS + SSL)

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Entender por que voc√™ precisa de um dom√≠nio
- [ ] Registrar um dom√≠nio
- [ ] Configurar Cloudflare como DNS manager
- [ ] Ativar prote√ß√£o e SSL autom√°tico
- [ ] Apontar dom√≠nio para a VPS

### Conte√∫do:
1. **Por Que Voc√™ Precisa de um Dom√≠nio?**
   - Acessar ferramentas com nomes amig√°veis
   - Ex: `n8n.seudominio.com` ao inv√©s de `123.45.67.89:5678`
   - Certificado SSL (HTTPS) autom√°tico
   - Prote√ß√£o DDoS gr√°tis com Cloudflare

2. **Onde Registrar Dom√≠nio**
   - Registro.br (R$ 40/ano - .com.br)
   - Hostinger (R$ 50/ano - .com)
   - Cloudflare Registrar (R$ 45/ano - .com - pre√ßo de custo)
   - Recomenda√ß√£o: qualquer um serve, vamos usar Cloudflare para DNS

3. **Por Que Usar Cloudflare?**
   - DNS gratuito e super r√°pido
   - SSL/TLS autom√°tico (certificado gr√°tis)
   - Prote√ß√£o DDoS
   - Cache de conte√∫do
   - Interface simples e poderosa

4. **Configurando Cloudflare (Passo a Passo)**
   - Criar conta gratuita no Cloudflare
   - Adicionar seu dom√≠nio
   - Cloudflare vai escanear registros DNS existentes
   - Anotar os nameservers do Cloudflare (exemplo: `alex.ns.cloudflare.com`)
   - Ir no painel do registrador (onde comprou o dom√≠nio)
   - Alterar nameservers para os do Cloudflare
   - Aguardar propaga√ß√£o (2-24h, geralmente 5-10 min)

5. **Configura√ß√£o de DNS no Cloudflare**
   - Criar registro tipo A: `@` ‚Üí IP da VPS (proxy ON - nuvem laranja)
   - Criar registro tipo A: `*` ‚Üí IP da VPS (wildcard para subdom√≠nios - proxy ON)
   - Entender diferen√ßa: nuvem laranja (proxied) vs cinza (DNS only)

6. **Configura√ß√£o SSL/TLS**
   - Ir em SSL/TLS ‚Üí Overview
   - Modo: "Full" (recomendado)
   - SSL autom√°tico ativado
   - Edge Certificates: Always Use HTTPS (ON)

7. **Teste de Funcionamento**
   - Verificar status no Cloudflare (Active)
   - Testar acesso: `https://seudominio.com`
   - Verificar certificado SSL (cadeado verde)

### Ferramentas Usadas:
- Registro.br / Hostinger / Cloudflare Registrar (registro de dom√≠nio)
- Cloudflare (DNS manager + SSL + prote√ß√£o)

### Entreg√°veis:
- [ ] Dom√≠nio registrado
- [ ] Cloudflare configurado como DNS
- [ ] Nameservers alterados e propagados
- [ ] SSL/TLS ativado
- [ ] Dom√≠nio apontando para VPS (teste OK)

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre dom√≠nios, DNS e Cloudflare

---

## Lesson 1.5: Instalando Docker e Portainer

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Acessar VPS via SSH
- [ ] Instalar Docker na VPS
- [ ] Instalar Portainer
- [ ] Acessar interface do Portainer

### Conte√∫do:
1. **Acesso SSH**
   - Windows: usar PuTTY ou CMD
   - Mac/Linux: usar Terminal
   - Comando: `ssh root@SEU_IP`
   - Inserir senha root

2. **Instala√ß√£o do Docker**
   - Comando √∫nico (script oficial)
   - Verificar instala√ß√£o: `docker --version`

3. **Instala√ß√£o do Portainer**
   - Comando docker run
   - Configurar porta 9000
   - Iniciar container Portainer

4. **Primeiro Acesso ao Portainer**
   - Acessar: `http://SEU_IP:9000`
   - Criar usu√°rio admin
   - Criar senha forte
   - Conectar ao Docker local

5. **Tour pela Interface**
   - Containers
   - Images
   - Volumes
   - Stacks (onde vamos trabalhar)

### Ferramentas Usadas:
- SSH (PuTTY/Terminal)
- Docker
- Portainer

### Entreg√°veis:
- [ ] Docker instalado na VPS
- [ ] Portainer instalado e acess√≠vel
- [ ] Usu√°rio admin criado no Portainer

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre Docker e Portainer

---

# üìö M√ìDULO 2: Suas Primeiras Instala√ß√µes

**Dura√ß√£o:** ~50 minutos  
**Objetivo:** Instalar 2 ferramentas funcionando (n8n + Chatwoot)  
**Entreg√°veis:** n8n rodando + Chatwoot rodando

---

## Lesson 2.1: Instalando OrionDesign (Conceito de Stacks)

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Entender o que √© uma Stack no Portainer
- [ ] Instalar OrionDesign
- [ ] Navegar pela biblioteca de templates
- [ ] Compreender a estrutura de um docker-compose

### Conte√∫do:
1. **O Que √© uma Stack?**
   - Stack = conjunto de containers trabalhando juntos
   - Definido em arquivo docker-compose.yml
   - Facilita instala√ß√£o de aplica√ß√µes complexas

2. **Instalando OrionDesign**
   - Acessar Portainer ‚Üí Stacks
   - Criar nova stack
   - Colar template do OrionDesign
   - Deploy da stack
   - Acessar OrionDesign via navegador

3. **Tour pelo OrionDesign**
   - Biblioteca de templates
   - Categorias de ferramentas
   - Como usar um template (preview)

4. **Anatomia de um Docker Compose**
   - Services (ferramentas/containers)
   - Ports (portas de acesso)
   - Volumes (dados persistentes)
   - Environment (vari√°veis de configura√ß√£o)

### Ferramentas Usadas:
- Portainer
- OrionDesign

### Entreg√°veis:
- [ ] OrionDesign instalado e funcionando
- [ ] Biblioteca de templates acess√≠vel

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre Stacks e OrionDesign

---

## Lesson 2.2: Sua Primeira Ferramenta - n8n

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Instalar n8n usando OrionDesign/Portainer
- [ ] Configurar subdom√≠nio para n8n
- [ ] Acessar interface do n8n
- [ ] Criar primeira automa√ß√£o de teste

### Conte√∫do:
1. **O Que √© n8n?**
   - Ferramenta de automa√ß√£o (alternativa ao Zapier)
   - Vers√£o cloud: R$ 150/m√™s
   - Vers√£o self-hosted: gr√°tis!

2. **Instala√ß√£o via OrionDesign**
   - Buscar template "n8n"
   - Configurar vari√°veis:
     - Subdom√≠nio: `n8n.seudominio.com`
     - Email para SSL
     - Senha de acesso
   - Deploy da stack
   - Aguardar containers iniciarem

3. **Configura√ß√£o de Subdom√≠nio**
   - Verificar DNS propagado
   - Acessar via HTTPS (certificado autom√°tico)

4. **Primeiro Acesso ao n8n**
   - Login com credenciais
   - Tour pela interface
   - Criar workflow simples de teste

5. **Teste de Funcionamento**
   - Criar workflow "Hello World"
   - Executar manualmente
   - Verificar logs

### Ferramentas Usadas:
- Portainer
- OrionDesign
- n8n

### Entreg√°veis:
- [ ] n8n instalado e rodando
- [ ] Acesso via `n8n.seudominio.com`
- [ ] Workflow de teste funcionando

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre instala√ß√£o do n8n

---

## Lesson 2.3: Segunda Ferramenta - Chatwoot

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Instalar Chatwoot usando OrionDesign/Portainer
- [ ] Configurar subdom√≠nio para Chatwoot
- [ ] Acessar interface do Chatwoot
- [ ] Configurar primeiro inbox de teste

### Conte√∫do:
1. **O Que √© Chatwoot?**
   - Ferramenta de atendimento ao cliente
   - Alternativa ao Zendesk/Intercom
   - Vers√£o cloud: R$ 100/m√™s
   - Vers√£o self-hosted: gr√°tis!

2. **Instala√ß√£o via OrionDesign**
   - Buscar template "Chatwoot"
   - Configurar vari√°veis:
     - Subdom√≠nio: `chatwoot.seudominio.com`
     - Banco de dados PostgreSQL (incluso)
     - Redis (incluso)
     - Email SMTP (opcional)
   - Deploy da stack
   - Aguardar inicializa√ß√£o (pode demorar 2-3 min)

3. **Primeiro Acesso ao Chatwoot**
   - Acessar `chatwoot.seudominio.com`
   - Criar conta admin
   - Criar primeira conta (workspace)

4. **Configura√ß√£o B√°sica**
   - Criar inbox de teste (Website)
   - Instalar widget no site (demo)
   - Enviar primeira mensagem de teste

5. **Troubleshooting Comum**
   - Container demora a inicializar: normal
   - Erro de banco de dados: aguardar 2 min
   - Certificado SSL n√£o gerado: verificar DNS

### Ferramentas Usadas:
- Portainer
- OrionDesign
- Chatwoot

### Entreg√°veis:
- [ ] Chatwoot instalado e rodando
- [ ] Acesso via `chatwoot.seudominio.com`
- [ ] Inbox de teste configurado

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre instala√ß√£o do Chatwoot

---

## Lesson 2.4: Troubleshooting Comum

**Dura√ß√£o:** 5 minutos  
**Formato:** V√≠deo gravado  
**Bloom Level:** Analisar

### Objetivos de Aprendizado:
- [ ] Identificar erros comuns em instala√ß√µes
- [ ] Resolver problemas de DNS
- [ ] Resolver problemas de containers
- [ ] Saber onde buscar logs

### Conte√∫do:
1. **Problemas de DNS**
   - Sintoma: "Site n√£o encontrado"
   - Causa: DNS n√£o propagado
   - Solu√ß√£o: Aguardar at√© 24h ou verificar configura√ß√£o

2. **Problemas de Container**
   - Sintoma: Container em loop (restart constante)
   - Causa: Configura√ß√£o errada ou falta de recursos
   - Solu√ß√£o: Verificar logs no Portainer

3. **Problemas de Certificado SSL**
   - Sintoma: "Conex√£o n√£o segura"
   - Causa: Certificado ainda n√£o gerado
   - Solu√ß√£o: Aguardar 5-10 min ou verificar email configurado

4. **Como Ler Logs no Portainer**
   - Acessar container ‚Üí Logs
   - Identificar mensagens de erro
   - Buscar erro no Google/ChatGPT

5. **Recursos de Ajuda**
   - Documenta√ß√£o oficial das ferramentas
   - Suporte do curso
   - Comunidades (Discord, f√≥runs)

### Ferramentas Usadas:
- Portainer (logs)

### Entreg√°veis:
- Nenhum (aula de troubleshooting)

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre resolu√ß√£o de problemas

---

# üìö M√ìDULO 3: Projeto Final e Autonomia

**Dura√ß√£o:** ~30 minutos  
**Objetivo:** Instalar 3¬™ ferramenta + seguran√ßa + monetiza√ß√£o  
**Entreg√°veis:** 3¬™ ferramenta rodando + VPS segura

---

## Lesson 3.1: Instalando Sua Terceira Ferramenta (Escolha Livre)

**Dura√ß√£o:** 15 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Criar

### Objetivos de Aprendizado:
- [ ] Escolher uma ferramenta baseada em necessidade
- [ ] Instalar ferramenta de forma aut√¥noma
- [ ] Testar funcionamento
- [ ] Demonstrar autonomia adquirida

### Conte√∫do:
1. **Op√ß√µes de Ferramentas**
   - **Evolution API:** API para WhatsApp
   - **NocoDB:** Banco de dados no-code (alternativa ao Airtable)
   - **Supabase:** Backend completo (alternativa ao Firebase)
   - **Baserow:** Planilhas colaborativas

2. **Como Escolher?**
   - Qual sua necessidade atual?
   - Qual ferramenta resolve seu problema?
   - Demonstra√ß√£o r√°pida de cada op√ß√£o

3. **Instala√ß√£o Guiada (Exemplo: Evolution API)**
   - Buscar template no OrionDesign
   - Configurar vari√°veis necess√°rias
   - Deploy da stack
   - Testar funcionamento

4. **Instala√ß√£o Aut√¥noma (Voc√™ Escolhe)**
   - Seguir mesmo processo
   - Aplicar conhecimento das lessons anteriores
   - Resolver problemas por conta pr√≥pria

5. **Valida√ß√£o**
   - Ferramenta acess√≠vel via subdom√≠nio
   - Interface funcionando
   - Teste b√°sico realizado

### Ferramentas Usadas:
- Portainer
- OrionDesign
- Ferramenta escolhida pelo aluno

### Entreg√°veis:
- [ ] 3¬™ ferramenta instalada e funcionando
- [ ] Acesso via subdom√≠nio configurado
- [ ] Teste de funcionamento realizado

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre autonomia e escolha de ferramentas

---

## Lesson 3.2: Seguran√ßa B√°sica e Backups

**Dura√ß√£o:** 10 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Configurar firewall b√°sico na VPS
- [ ] Alterar porta SSH padr√£o
- [ ] Criar backups autom√°ticos
- [ ] Entender import√¢ncia de senhas fortes

### Conte√∫do:
1. **Firewall UFW (Ubuntu)**
   - Ativar UFW
   - Liberar portas necess√°rias (80, 443, 9000, SSH)
   - Bloquear resto

2. **Alterar Porta SSH**
   - Por que alterar porta 22?
   - Editar configura√ß√£o SSH
   - Reiniciar servi√ßo
   - Testar nova porta

3. **Backups Autom√°ticos**
   - Usar recurso de backup do provedor (se dispon√≠vel)
   - Backup via Portainer (export de stacks)
   - Frequ√™ncia recomendada: semanal

4. **Senhas Fortes**
   - Usar gerenciador de senhas
   - Ativar 2FA onde poss√≠vel
   - Nunca compartilhar credenciais

5. **Monitoramento B√°sico**
   - Verificar uso de recursos no Portainer
   - Alertas de container parado
   - Logs de acesso

### Ferramentas Usadas:
- UFW (firewall)
- SSH
- Portainer (backups)

### Entreg√°veis:
- [ ] Firewall configurado
- [ ] Porta SSH alterada
- [ ] Primeiro backup criado

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre seguran√ßa

---

## Lesson 3.3: Pr√≥ximos Passos e Monetiza√ß√£o

**Dura√ß√£o:** 5 minutos  
**Formato:** V√≠deo gravado  
**Bloom Level:** Avaliar

### Objetivos de Aprendizado:
- [ ] Entender pr√≥ximos passos de aprendizado
- [ ] Compreender oportunidades de monetiza√ß√£o
- [ ] Receber recursos adicionais
- [ ] Celebrar conquista

### Conte√∫do:
1. **Parab√©ns, Lend√°rio!**
   - Recapitula√ß√£o do que voc√™ conquistou
   - 3 ferramentas rodando
   - Economia de R$ 4.272/ano
   - Autonomia tecnol√≥gica

2. **Pr√≥ximos Passos de Aprendizado**
   - Explorar outras 47+ ferramentas no OrionDesign
   - Aprender Docker Compose avan√ßado
   - Integrar ferramentas entre si
   - Criar automa√ß√µes complexas

3. **Oportunidades de Monetiza√ß√£o**
   - **Servi√ßo 1:** Instala√ß√µes para clientes (R$ 300-800/instala√ß√£o)
   - **Servi√ßo 2:** Pacotes de manuten√ß√£o (R$ 200-500/m√™s)
   - **Servi√ßo 3:** Consultoria em automa√ß√µes (R$ 100-300/hora)
   - Como precificar seus servi√ßos
   - Onde encontrar clientes

4. **Recursos Adicionais**
   - Lista de 50+ ferramentas open source
   - Templates prontos de docker-compose
   - Comunidade de alunos
   - Suporte cont√≠nuo

5. **Certifica√ß√£o**
   - Como solicitar certificado
   - Compartilhar no LinkedIn
   - Usar como credencial profissional

6. **Chamada para A√ß√£o**
   - Instale mais ferramentas
   - Compartilhe seu sucesso
   - Ofere√ßa servi√ßos
   - Continue aprendendo
   - **N√£o perca a Lesson B√¥nus 3.4** sobre manuten√ß√£o!

### Ferramentas Usadas:
- Nenhuma (aula de encerramento)

### Entreg√°veis:
- Nenhum (lesson motivacional)

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre pr√≥ximos passos e monetiza√ß√£o

---

## Lesson 3.4 (B√îNUS): Atualiza√ß√£o e Manuten√ß√£o de Ferramentas

**Dura√ß√£o:** 10 minutos  
**Formato:** V√≠deo gravado (screenshare)  
**Bloom Level:** Aplicar

### Objetivos de Aprendizado:
- [ ] Entender por que atualizar ferramentas √© importante
- [ ] Verificar vers√µes instaladas vs. vers√µes dispon√≠veis
- [ ] Atualizar ferramentas via Portainer
- [ ] Criar rotina de manuten√ß√£o preventiva
- [ ] Solucionar problemas ap√≥s atualiza√ß√µes

### Conte√∫do:
1. **Por Que Manuten√ß√£o √© Importante?**
   - Seguran√ßa: corre√ß√£o de vulnerabilidades
   - Performance: melhorias de desempenho
   - Novos recursos: aproveitar features novas
   - Estabilidade: corre√ß√£o de bugs
   - **Regra de ouro:** Sempre fazer backup antes de atualizar!

2. **Verificando Vers√µes Instaladas**
   - Acessar Portainer ‚Üí Containers
   - Ver vers√£o da imagem (tag)
   - Ex: `n8n:latest` vs `n8n:1.25.0`
   - Consultar site oficial da ferramenta
   - Ler changelog (o que mudou?)

3. **Estrat√©gias de Atualiza√ß√£o**
   - **Op√ß√£o 1:** Usar tag `latest` (sempre atualiza automaticamente)
     - Vantagem: sempre atualizado
     - Desvantagem: pode quebrar algo
   - **Op√ß√£o 2:** Usar tag de vers√£o espec√≠fica (ex: `1.25.0`)
     - Vantagem: controle total
     - Desvantagem: manual
   - **Recomenda√ß√£o:** Para produ√ß√£o, use vers√£o espec√≠fica

4. **Como Atualizar via Portainer (Passo a Passo)**
   - **Antes de tudo:** Fazer backup!
     - Exportar stack (JSON)
     - Backup de volumes (dados)
   - **Passo 1:** Parar container
   - **Passo 2:** Ir em Containers ‚Üí Selecionar ‚Üí Recreate
   - **Passo 3:** Habilitar "Pull latest image version"
   - **Passo 4:** Recreate
   - **Passo 5:** Aguardar download da nova imagem
   - **Passo 6:** Container reinicia com nova vers√£o
   - **Passo 7:** Testar funcionamento

5. **Atualizando via Stack (Recomendado)**
   - Ir em Stacks ‚Üí Selecionar stack
   - Clicar em "Editor"
   - Alterar tag da imagem (ex: `:latest` para `:1.26.0`)
   - "Update the stack"
   - Portainer baixa nova imagem e recria container
   - Vantagem: mant√©m hist√≥rico de vers√µes

6. **Testando Ap√≥s Atualiza√ß√£o**
   - Acessar ferramenta via navegador
   - Verificar se funcionalidades principais funcionam
   - Checar logs no Portainer (erros?)
   - Se algo quebrou: fazer rollback!

7. **Rollback: Voltando Vers√£o Anterior**
   - Se algo deu errado ap√≥s atualiza√ß√£o:
   - Editar stack novamente
   - Voltar para vers√£o anterior (ex: `1.25.0`)
   - Update the stack
   - Restaurar backup se necess√°rio

8. **Rotina de Manuten√ß√£o Recomendada**
   - **Semanal:**
     - Verificar logs de erros
     - Monitorar uso de recursos (CPU, RAM, disco)
     - Verificar se containers est√£o rodando
   - **Mensal:**
     - Verificar vers√µes dispon√≠veis
     - Ler changelogs das ferramentas
     - Atualizar ferramentas n√£o-cr√≠ticas
   - **Trimestral:**
     - Atualizar Docker e Portainer
     - Atualizar sistema operacional (Ubuntu)
     - Revisar configura√ß√µes de seguran√ßa
     - Testar backups (restaurar em ambiente de teste)

9. **Atualizando Docker e Portainer**
   - **Docker:**
     ```bash
     curl -fsSL https://get.docker.com -o get-docker.sh
     sudo sh get-docker.sh
     ```
   - **Portainer:**
     ```bash
     docker stop portainer
     docker rm portainer
     docker pull portainer/portainer-ce:latest
     docker run -d -p 9000:9000 --name=portainer --restart=always \
       -v /var/run/docker.sock:/var/run/docker.sock \
       -v portainer_data:/data \
       portainer/portainer-ce:latest
     ```

10. **Monitoramento Simples**
    - Usar Portainer Dashboard
    - Verificar:
      - CPU usage
      - Memory usage
      - Disk space
    - Se CPU/RAM > 80%: considerar upgrade de VPS
    - Se Disk > 80%: limpar volumes antigos ou aumentar disco

11. **Limpeza de Recursos Antigos**
    - **Imagens antigas n√£o usadas:**
      ```bash
      docker image prune -a
      ```
    - **Volumes √≥rf√£os:**
      ```bash
      docker volume prune
      ```
    - **Containers parados:**
      ```bash
      docker container prune
      ```
    - ‚ö†Ô∏è **CUIDADO:** Isso remove permanentemente! S√≥ fa√ßa se tiver backup.

12. **Checklist de Manuten√ß√£o Mensal**
    - [ ] Backup de todas as stacks (export JSON)
    - [ ] Backup de volumes importantes
    - [ ] Verificar vers√µes desatualizadas
    - [ ] Ler changelogs das ferramentas
    - [ ] Atualizar ferramentas (uma por vez)
    - [ ] Testar cada ferramenta ap√≥s atualiza√ß√£o
    - [ ] Limpar imagens antigas (docker image prune)
    - [ ] Verificar espa√ßo em disco
    - [ ] Revisar logs de erro
    - [ ] Testar backups (restaurar em ambiente de teste)

### Ferramentas Usadas:
- Portainer (atualiza√ß√£o e monitoramento)
- SSH (comandos Docker)
- Backup/Export tools

### Entreg√°veis:
- [ ] Primeira atualiza√ß√£o de ferramenta realizada com sucesso
- [ ] Backup criado antes da atualiza√ß√£o
- [ ] Checklist de manuten√ß√£o mensal salvo
- [ ] Conhecimento de rollback

### Quiz (ap√≥s lesson):
- 5 quest√µes sobre atualiza√ß√£o e manuten√ß√£o

---

## üìä Resumo de Entreg√°veis do Curso

Ao final das 12 lessons, o aluno ter√°:

‚úÖ **Infraestrutura:**
- VPS contratada e configurada
- Docker instalado
- Portainer instalado e acess√≠vel
- Dom√≠nio registrado e DNS configurado

‚úÖ **Ferramentas Funcionando:**
- OrionDesign (facilitador de instala√ß√µes)
- n8n (automa√ß√£o)
- Chatwoot (atendimento)
- 3¬™ ferramenta de escolha livre

‚úÖ **Seguran√ßa:**
- Firewall configurado
- Porta SSH alterada
- Backup inicial criado

‚úÖ **Conhecimento:**
- Autonomia para instalar qualquer ferramenta open source
- Troubleshooting b√°sico
- Conceitos de Docker, Portainer, Stacks
- Oportunidades de monetiza√ß√£o

‚úÖ **Economia:**
- R$ 4.272/ano economizados
- Investimento: apenas R$ 528/ano (VPS + dom√≠nio)

---

## üìà Distribui√ß√£o da Taxonomia de Bloom

| N√≠vel | % do Curso | Lessons |
|-------|-----------|---------|
| **Lembrar** | 8% | 1.1 |
| **Compreender** | 17% | 1.2, 3.3 |
| **Aplicar** | 58% | 1.3, 1.4, 1.5, 2.1, 2.2, 2.3, 3.2 |
| **Analisar** | 8% | 2.4 |
| **Criar** | 9% | 3.1 |
| **Avaliar** | 0% | (impl√≠cito em quizzes) |

**‚úÖ Balanceamento ideal para curso pr√°tico hands-on**

---

## üéØ Crit√©rios de Sucesso

O aluno completou o curso com sucesso se:

‚úÖ Assistiu 100% das 12 lessons  
‚úÖ Completou todos os 12 quizzes  
‚úÖ Possui 3 ferramentas funcionando na VPS  
‚úÖ Consegue instalar novas ferramentas de forma aut√¥noma  
‚úÖ Economizou R$ 356 no primeiro m√™s (ROI imediato)

---

**√öltima atualiza√ß√£o:** Outubro 2025  
**Vers√£o:** 1.0
